import random
Pattern = {'7': ' ', '8': ' ', '9': ' ',
            '4': ' ', '5': ' ', '6': ' ',
            '1': ' ', '2': ' ', '3': ' '}
New_Pattern = []

#for key in Pattern:
#    New_Pattern.append(key)

def printPattern(board):
    print(' _____________')
    print(' | '+board['7'] + ' | ' + board['8'] + ' | ' + board['9']+ ' |')
    print(' _____________')
    print(' | '+board['4'] + ' | ' + board['5'] + ' | ' + board['6']+' |')
    print(' _____________')
    print(' | '+board['1'] + ' | ' + board['2'] + ' | ' + board['3']+' |')
    print(' _____________')

op1=input("Player 1 : ")
op2=input("Player 2 : ")

def toss(swap,sign):
    rand = random.randint(1, 10)
    if rand > 5:
        swap = "1"
        sign= op1
    else:
        swap = "2"
        sign = op2
    print(" ----- Player " + swap + " Won the toss ----- ")

def game():
    swap = "0"
    turn = "0"
    count = 0
    toss(swap,turn)
    for i in range(10):
        printPattern(Pattern)
        move = input(" ----- Player " + swap + ", Enter Location : ")

        if Pattern[move] == ' ':
            Pattern[move] = turn
            count += 1
        else:
            print("That place is already filled.\nMove to which place?")
            continue

        # Now we will check if player X or O has won,for every move after 5 moves.
        if count >= 5:
            if Pattern['7'] == Pattern['8'] == Pattern['9'] != ' ':  # across the top
                printPattern(Pattern)
                print("\nGame Over.\n")
                print(" Player " + swap + " won. ****")
                break
            elif Pattern['4'] == Pattern['5'] == Pattern['6'] != ' ':  # across the middle
                printPattern(Pattern)
                print("\nGame Over.\n")
                print(" Player " + swap + " won. ****")
                break
            elif Pattern['1'] == Pattern['2'] == Pattern['3'] != ' ':  # across the bottom
                printPattern(Pattern)
                print("\nGame Over.\n")
                print(" Player " + swap + " won. ****")
                break
            elif Pattern['1'] == Pattern['4'] == Pattern['7'] != ' ':  # down the left side
                printPattern(Pattern)
                print("\nGame Over.\n")
                print(" Player " + swap + " won. ****")
                break
            elif Pattern['2'] == Pattern['5'] == Pattern['8'] != ' ':  # down the middle
                printPattern(Pattern)
                print("\nGame Over.\n")
                print(" Player " + swap + " won. ****")
                break
            elif Pattern['3'] == Pattern['6'] == Pattern['9'] != ' ':  # down the right side
                printPattern(Pattern)
                print("\nGame Over.\n")
                print(" Player " + swap + " won. ****")
                break
            elif Pattern['7'] == Pattern['5'] == Pattern['3'] != ' ':  # diagonal
                printPattern(Pattern)
                print("\nGame Over.\n")
                print(" Player " + swap + " won. ****")
                break
            elif Pattern['1'] == Pattern['5'] == Pattern['9'] != ' ':  # diagonal
                printPattern(Pattern)
                print("\nGame Over.\n")
                print(" Player " + swap + " Won ****")
                break

        # If neither X nor O wins and the board is full, we'll declare the result as 'tie'.
        if count == 9:
            print("\nGame Over.\n")
            print("It's a Tie!!")

        # Now we have to change the player after every move.
        if swap == "1":
            turn=op1
            swap = "2"
        else:
            swap="1"
            turn=op2

            # Now we will ask if player wants to restart the game or not.
    restart = input("Do want to play Again?(y/n)")
    if restart == "y" or restart == "Y":
        for key in New_Pattern:
            Pattern[key] = " "

        game()

if __name__ == "__main__":
    game()
